// Code generated by ent, DO NOT EDIT.

package quiz

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the quiz type in the database.
	Label = "quiz"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldProblem holds the string denoting the problem field in the database.
	FieldProblem = "problem"
	// FieldAnswer holds the string denoting the answer field in the database.
	FieldAnswer = "answer"
	// Table holds the table name of the quiz in the database.
	Table = "quiz"
)

// Columns holds all SQL columns for quiz fields.
var Columns = []string{
	FieldID,
	FieldProblem,
	FieldAnswer,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultProblem holds the default value on creation for the "problem" field.
	DefaultProblem string
	// DefaultAnswer holds the default value on creation for the "answer" field.
	DefaultAnswer string
)

// OrderOption defines the ordering options for the Quiz queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByProblem orders the results by the problem field.
func ByProblem(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldProblem, opts...).ToFunc()
}

// ByAnswer orders the results by the answer field.
func ByAnswer(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAnswer, opts...).ToFunc()
}
